[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\dingv\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\dingv\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Azul Systems, Inc. Java 21.0.1)
[debug] Load.defaultLoad until apply took 188.7121ms
[debug]           Load.loadUnit: plugins took 118.1417ms
[debug]           Load.loadUnit: defsScala took 0.803ms
[debug] [Loading] Scanning directory C:\Users\dingv\OneDrive\Uni\4.Semester\02123\Fagprojekt\project
[debug]             Load.loadUnit: mkEval took 8.047ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dingv\OneDrive\Uni\4.Semester\02123\Fagprojekt\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.1623 ms
[info] loading settings for project fagprojekt-build from idea.sbt ...
[debug]               Load.resolveProject(fagprojekt-build) took 63.122ms
[debug]             Load.loadTransitive: finalizeProject(Project(id fagprojekt-build, base: C:\Users\dingv\OneDrive\Uni\4.Semester\02123\Fagprojekt\project, plugins: List(<none>))) took 99.2971ms
[debug] [Loading] Done in C:\Users\dingv\OneDrive\Uni\4.Semester\02123\Fagprojekt\project, returning: (fagprojekt-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3548.7256ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.9827ms
[debug]         Load.loadUnit(file:/C:/Users/dingv/OneDrive/Uni/4.Semester/02123/Fagprojekt/project/, ...) took 3690.686ms
[debug]       Load.apply: load took 3852.5265ms
[debug]       Load.apply: resolveProjects took 4.7183ms
[debug]       Load.apply: finalTransforms took 131.6458ms
[debug]       Load.apply: config.delegates took 15.5261ms
[debug]       Load.apply: Def.make(settings)... took 625.9357ms
[debug]       Load.apply: structureIndex took 111.0655ms
[debug]       Load.apply: mkStreams took 2.8595ms
[info] loading project definition from C:\Users\dingv\OneDrive\Uni\4.Semester\02123\Fagprojekt\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6961.182ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\dingv\OneDrive\Uni\4.Semester\02123\Fagprojekt
[debug]       Load.loadUnit: mkEval took 0.3952ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dingv\OneDrive\Uni\4.Semester\02123\Fagprojekt, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.0319 ms
[info] loading settings for project fagprojekt from build.sbt ...
[debug]         Load.resolveProject(fagprojekt) took 41.6579ms
[debug]       Load.loadTransitive: finalizeProject(Project(id fagprojekt, base: C:\Users\dingv\OneDrive\Uni\4.Semester\02123\Fagprojekt, plugins: List(<none>))) took 47.3179ms
[debug] [Loading] Done in C:\Users\dingv\OneDrive\Uni\4.Semester\02123\Fagprojekt, returning: (fagprojekt)
[debug]     Load.loadUnit: loadedProjectsRaw took 1936.4561ms
[debug]     Load.loadUnit: cleanEvalClasses took 42.5787ms
[debug]   Load.loadUnit(file:/C:/Users/dingv/OneDrive/Uni/4.Semester/02123/Fagprojekt/, ...) took 8942.7047ms
[debug] Load.apply: load took 8979.6643ms
[debug] Load.apply: resolveProjects took 0.2137ms
[debug] Load.apply: finalTransforms took 32.7438ms
[debug] Load.apply: config.delegates took 0.3757ms
[debug] Load.apply: Def.make(settings)... took 109.4224ms
[debug] Load.apply: structureIndex took 29.9936ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to fagprojekt (in build file:/C:/Users/dingv/OneDrive/Uni/4.Semester/02123/Fagprojekt/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53664 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53664, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to fagprojekt (in build file:/C:/Users/dingv/OneDrive/Uni/4.Semester/02123/Fagprojekt/)
[debug] > Exec(idea-shell, None, None)
